{"version":3,"file":"js/953.a08b248e.js","mappings":"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","sources":["webpack://amiyabot-console/./src/request/plugin.ts","webpack://amiyabot-console/./src/request/remote/amiyabotServer.ts","webpack://amiyabot-console/./src/request/remote/cosServer.ts","webpack://amiyabot-console/./src/components/v-dialog.vue?65e0","webpack://amiyabot-console/./src/components/v-dialog.vue","webpack://amiyabot-console/./src/components/v-dialog.vue?735b","webpack://amiyabot-console/./src/views/app/plugin/pluginDetail.vue?e9e5","webpack://amiyabot-console/./node_modules/marked/lib/marked.esm.js","webpack://amiyabot-console/./src/views/app/plugin/pluginDetail.vue","webpack://amiyabot-console/./src/views/app/plugin/pluginDetail.vue?61c5"],"sourcesContent":["import Notice from '@/lib/message'\nimport HttpRequest from '@/lib/http'\nimport { StringDict } from '@/lib/common'\nimport { recordInstalledCount } from '@/request/remote/amiyabotServer'\nimport { cosHost, cos } from '@/request/remote/cosServer'\n\nconst request = new HttpRequest()\nconst official = 'plugins/official'\nconst custom = 'plugins/custom'\n\nexport function getPluginPostData (data: StringDict) {\n    const post = {\n        url: data.url,\n        packageName: '',\n        plugin_id: data.plugin_id\n    }\n    if (data.plugin_type === 'official') {\n        post.url = cosHost + `/${official}/${data.plugin_id}-${data.version}.zip`\n        post.packageName = `${data.plugin_id}-${data.version}.zip`\n    } else {\n        post.url = cosHost + `/${custom}/${data.plugin_id}/${data.file}`\n        post.packageName = data.file\n    }\n\n    return post\n}\n\nexport async function getInstalledPlugin () {\n    return await request.get({\n        url: '/plugin/getInstalledPlugin'\n    })\n}\n\nexport async function getPluginConfig (data: StringDict) {\n    return await request.post({\n        url: '/plugin/getPluginConfig',\n        data: data\n    })\n}\n\nexport async function delPluginConfig (data: StringDict) {\n    return await request.post({\n        url: '/plugin/delPluginConfig',\n        data: data\n    })\n}\n\nexport async function getPluginDefaultConfig (data: StringDict) {\n    return await request.post({\n        url: '/plugin/getPluginDefaultConfig',\n        data: data\n    })\n}\n\nexport async function setPluginConfig (data: StringDict) {\n    return await request.post({\n        url: '/plugin/setPluginConfig',\n        data: data\n    })\n}\n\nexport async function getPluginShop () {\n    return await cos.get({\n        url: `/${official}/plugins.json?time=${new Date().getTime()}`\n    })\n}\n\nexport async function installPlugin (data: StringDict) {\n    await recordInstalledCount(data)\n    return await request.post({\n        url: '/plugin/installPlugin',\n        data: getPluginPostData(data)\n    })\n}\n\nexport async function upgradePlugin (data: StringDict) {\n    return await request.post({\n        url: '/plugin/upgradePlugin',\n        data: getPluginPostData(data)\n    })\n}\n\nexport async function uninstallPlugin (data: StringDict) {\n    if (await Notice.confirm('确定卸载插件【' + data.name + '】')) {\n        return await request.post({\n            url: '/plugin/uninstallPlugin',\n            data\n        })\n    }\n}\n\nexport async function reloadPlugin (data: StringDict, force: boolean) {\n    if (await Notice.confirm('此操作将重新运行插件【' + data.name + '】')) {\n        return await request.post({\n            url: '/plugin/reloadPlugin',\n            data: {\n                ...data,\n                force\n            }\n        })\n    }\n}\n","import HttpRequest from '@/lib/http'\nimport { StringDict } from '@/lib/common'\n\n// export const amiyaBotServerHost = 'https://server.amiyabot.com:10001'\nexport const amiyaBotServerHost = 'https://cdn.amiyabot.com'\nexport const uploadPluginUrl = amiyaBotServerHost + '/uploadPlugin'\n\nexport const amiyaBotServer = new HttpRequest({\n    host: amiyaBotServerHost\n})\n\nexport async function commitToCustomShop (data: StringDict) {\n    return await amiyaBotServer.post({\n        url: '/commitPlugin',\n        data\n    })\n}\n\nexport async function getCustomPluginShop () {\n    return await amiyaBotServer.get({\n        // url: '/getPlugins'\n        url: '/api/v1/plugins.json'\n    })\n}\n\nexport async function delCustomPlugin (data: StringDict) {\n    return await amiyaBotServer.post({\n        url: '/deletePlugin',\n        data\n    })\n}\n\nexport async function getHistoryVersion (data: StringDict) {\n    return await amiyaBotServer.get({\n        url: '/getHistoryVersion',\n        data: {\n            plugin_id: data.plugin_id\n        }\n    })\n}\n\nexport async function recordInstalledCount (data: StringDict) {\n    await amiyaBotServer.post({\n        url: '/recordInstalledCount',\n        data\n    })\n}\n\nexport async function getBotCommunity () {\n    return await amiyaBotServer.get({\n        url: '/getBotCommunity'\n    })\n}\n","import HttpRequest from '@/lib/http'\n\nexport const cosHost = 'https://cos.amiyabot.com'\n\nexport const cos = new HttpRequest({\n    host: cosHost\n})\n\nexport async function getNotice () {\n    return await cos.get({\n        url: '/notice.txt'\n    })\n}\n","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    modelValue: _ctx.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.dialogVisible = $event),\n    title: _ctx.title,\n    \"append-to-body\": _ctx.appendToBody,\n    width: _ctx.width,\n    \"destroy-on-close\": \"\",\n    onClosed: _cache[1] || (_cache[1] = () => _ctx.$emit('closed'))\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"modelValue\", \"title\", \"append-to-body\", \"width\"]);\n}","import _defineProperty from \"/home/runner/work/Amiya-Bot-console2/Amiya-Bot-console2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Options, Vue } from 'vue-class-component';\nlet VDialog = class VDialog extends Vue {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"title\", void 0);\n\n    _defineProperty(this, \"dialogVisible\", false);\n  }\n\n  show() {\n    this.dialogVisible = true;\n  }\n\n  async asyncShow() {\n    this.dialogVisible = true;\n    await this.$nextTick();\n  }\n\n  hide() {\n    this.dialogVisible = false;\n  }\n\n  async asyncHide() {\n    this.dialogVisible = false;\n    await this.$nextTick();\n  }\n\n};\nVDialog = __decorate([Options({\n  emits: ['closed'],\n  props: {\n    title: String,\n    width: String,\n    appendToBody: Boolean\n  }\n})], VDialog);\nexport default VDialog;","/* unplugin-vue-components disabled */import { render } from \"./v-dialog.vue?vue&type=template&id=0980aadd&ts=true\"\nimport script from \"./v-dialog.vue?vue&type=script&lang=ts\"\nexport * from \"./v-dialog.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/runner/work/Amiya-Bot-console2/Amiya-Bot-console2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderSlot as _renderSlot, createTextVNode as _createTextVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"plugin-detail-content\"\n};\nconst _hoisted_2 = {\n  class: \"plugin-detail-header\"\n};\nconst _hoisted_3 = {\n  class: \"plugin-detail-title\"\n};\nconst _hoisted_4 = {\n  class: \"plugin-icon detail\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"plugin-name detail\"\n};\nconst _hoisted_7 = {\n  style: {\n    \"color\": \"var(--el-color-primary)\"\n  }\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"official-icon\"\n};\nconst _hoisted_9 = {\n  class: \"plugin-detail-info\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", null, \"版本：\", -1);\n\nconst _hoisted_11 = {\n  key: 0\n};\n\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", null, \"作者：\", -1);\n\nconst _hoisted_13 = {\n  key: 1\n};\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", null, \"累计下载次数：\", -1);\n\nconst _hoisted_15 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_16 = {\n  class: \"plugin-doc-card\",\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nconst _hoisted_17 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\"\n  }\n};\n\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\"插件文档\");\n\nconst _hoisted_19 = /*#__PURE__*/_createTextVNode(\"使用说明 \");\n\nconst _hoisted_20 = {\n  class: \"plugin-doc\"\n};\nconst _hoisted_21 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Discount = _resolveComponent(\"Discount\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_User = _resolveComponent(\"User\");\n\n  const _component_Download = _resolveComponent(\"Download\");\n\n  const _component_Collection = _resolveComponent(\"Collection\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_ctx.logo ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.logo,\n    alt: \"logo\"\n  }, null, 8, _hoisted_5)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.item.name), 1), _ctx.item.plugin_type === 'official' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", null, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_Discount)]),\n    _: 1\n  }), _hoisted_10, _renderSlot(_ctx.$slots, \"version\", {\n    item: _ctx.item\n  }, () => [_createTextVNode(_toDisplayString(_ctx.item.version), 1)])]), _ctx.author ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_User)]),\n    _: 1\n  }), _hoisted_12, _createElementVNode(\"div\", null, [_renderSlot(_ctx.$slots, \"author\", {\n    item: _ctx.item\n  }, () => [_createTextVNode(_toDisplayString(_ctx.author), 1)])])])) : _createCommentVNode(\"\", true), _ctx.downloadCount !== undefined ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_el_icon, null, {\n    default: _withCtx(() => [_createVNode(_component_Download)]),\n    _: 1\n  }), _hoisted_14, _createElementVNode(\"div\", null, _toDisplayString(_ctx.downloadCount), 1)])) : _createCommentVNode(\"\", true)])])]), _createElementVNode(\"div\", _hoisted_15, [_renderSlot(_ctx.$slots, \"button\", {\n    item: _ctx.item\n  })])]), _createElementVNode(\"div\", {\n    class: \"plugin-desc\",\n    ref: \"description\"\n  }, _toDisplayString(_ctx.item.description), 513), _createElementVNode(\"div\", _hoisted_16, [_createVNode(_component_el_card, {\n    \"body-style\": {\n      height: 'calc(100% - 57px)',\n      overflow: 'auto'\n    },\n    style: {\n      \"height\": \"100%\",\n      \"transition\": \"none\"\n    }\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_17, [_createVNode(_component_el_icon, {\n      style: {\n        \"margin-right\": \"3px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Collection)]),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      link: \"\",\n      type: _ctx.docPage === 0 ? 'primary' : '',\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.docPage = 0)\n    }, {\n      default: _withCtx(() => [_hoisted_18]),\n      _: 1\n    }, 8, [\"type\"]), _ctx.item.instruction ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_el_divider, {\n      direction: \"vertical\"\n    }), _createVNode(_component_el_icon, {\n      style: {\n        \"margin-right\": \"3px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Collection)]),\n      _: 1\n    }), _createVNode(_component_el_button, {\n      link: \"\",\n      type: _ctx.docPage === 1 ? 'primary' : '',\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.docPage = 1)\n    }, {\n      default: _withCtx(() => [_hoisted_19]),\n      _: 1\n    }, 8, [\"type\"])], 64)) : _createCommentVNode(\"\", true)])]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", {\n      class: \"markdown-body\",\n      innerHTML: _ctx.pluginDoc()\n    }, null, 8, _hoisted_21)])]),\n    _: 1\n  }, 8, [\"body-style\"])])]);\n}","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import _defineProperty from \"/home/runner/work/Amiya-Bot-console2/Amiya-Bot-console2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Options, Vue } from 'vue-class-component';\nimport { marked } from 'marked';\nimport Common from '@/lib/common';\nimport { Discount, User, Download, Collection } from '@element-plus/icons-vue';\nimport { amiyaBotServerHost } from '@/request/remote/amiyabotServer';\nexport function pluginLogo(item) {\n  const logo = item.logo;\n\n  if (!logo) {\n    return logo;\n  }\n\n  if (logo.startsWith('data:image/png;')) {\n    return logo;\n  }\n\n  if (logo.startsWith('/')) {\n    return Common.getData('host') + logo;\n  } // return amiyaBotServerHost + '/image?path=' + logo\n\n\n  return amiyaBotServerHost + '/api/v1/logo/' + logo;\n}\nlet PluginDetail = class PluginDetail extends Vue {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"item\", void 0);\n\n    _defineProperty(this, \"docPage\", 0);\n  }\n\n  pluginDoc() {\n    return marked.parse(this.docPage === 0 ? this.item.document : this.item.instruction);\n  }\n\n};\nPluginDetail = __decorate([Options({\n  components: {\n    Discount,\n    User,\n    Download,\n    Collection\n  },\n  props: {\n    item: Object,\n    author: String,\n    downloadCount: Number\n  },\n  computed: {\n    logo() {\n      return pluginLogo(this.item);\n    }\n\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      this.$forceUpdate();\n    });\n  }\n\n})], PluginDetail);\nexport default PluginDetail;","/* unplugin-vue-components disabled */import { render } from \"./pluginDetail.vue?vue&type=template&id=651ccd39&ts=true\"\nimport script from \"./pluginDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./pluginDetail.vue?vue&type=script&lang=ts\"\n\nimport \"./pluginDetail.vue?vue&type=style&index=0&id=651ccd39&lang=scss\"\n\nimport exportComponent from \"/home/runner/work/Amiya-Bot-console2/Amiya-Bot-console2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["request","HttpRequest","official","custom","getPluginPostData","data","post","url","packageName","plugin_id","plugin_type","cosHost","version","file","async","getInstalledPlugin","get","getPluginConfig","delPluginConfig","getPluginDefaultConfig","setPluginConfig","getPluginShop","cos","Date","getTime","installPlugin","recordInstalledCount","upgradePlugin","uninstallPlugin","Notice","name","reloadPlugin","force","amiyaBotServerHost","uploadPluginUrl","amiyaBotServer","host","commitToCustomShop","getCustomPluginShop","delCustomPlugin","getHistoryVersion","getBotCommunity","getNotice","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_dialog","modelValue","dialogVisible","$event","title","appendToBody","width","onClosed","$emit","default","$slots","_","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","VDialog","constructor","args","super","this","show","$nextTick","hide","emits","props","String","Boolean","__exports__","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","style","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_component_Discount","_component_el_icon","_component_User","_component_Download","_component_Collection","_component_el_button","_component_el_divider","_component_el_card","logo","src","alt","item","author","undefined","downloadCount","ref","description","height","overflow","header","link","type","docPage","onClick","instruction","direction","innerHTML","pluginDoc","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","n","toLowerCase","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","prototype","hasOwnProperty","call","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","invert","l","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","raw","lexer","text","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","options","space","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","use","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","pluginLogo","startsWith","PluginDetail","document","components","Discount","User","Download","Collection","Number","computed","mounted","$forceUpdate"],"sourceRoot":""}